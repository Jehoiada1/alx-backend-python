name: Inner CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: messaging_db
          MYSQL_USER: messaging_user
          MYSQL_PASSWORD: messaging_pass
          MYSQL_ROOT_PASSWORD: root_pass
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot_pass" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_NAME: messaging_db
      DB_USER: messaging_user
      DB_PASSWORD: messaging_pass
      DJANGO_SECRET_KEY: ci-secret
      DJANGO_DEBUG: 'False'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        working-directory: messaging_app
        run: |
          python -m pip install --upgrade pip
          sudo apt-get update && sudo apt-get install -y default-libmysqlclient-dev build-essential
          pip install -r requirements.txt pytest pytest-cov flake8
      - name: Django checks and migrate
        working-directory: messaging_app
        run: |
          python manage.py check
          python manage.py migrate --noinput
      - name: Run tests with coverage
        working-directory: messaging_app
        run: |
          mkdir -p reports
          pytest -q --maxfail=1 --disable-warnings --junitxml=reports/junit.xml --cov=. --cov-report=xml:reports/coverage.xml --cov-report=term
      - name: Lint with flake8
        working-directory: messaging_app
        run: flake8 .
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
            name: test-reports
            path: |
              messaging_app/reports/junit.xml
              messaging_app/reports/coverage.xml
